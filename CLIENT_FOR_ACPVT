(* Границы кадров на принимающей стороне определяются по превышению таймаута после приема последнего символа    							*)
(* Сервер отвечает только на адресованные ему запросы, описанного выше формата и при условии корректного CRC в принятом кадре *)
(* В примере определена единственная функция ping с кодом 11, выполняющая эхо-ответ данных запроса в кадре ответа мастеру 		*)
(* Клиент с периодом 200мс выполняет вызов функции ping 																																			*)

FUNCTION_BLOCK CLIENT_FOR_ACPVT
(* Ïðîãðàììà êëèåíòà *)

VAR
	(* Функциональный блок NIM74х *)
	hwNim74x : NIM741_DIRECT;

	(* Текущее состояние мастера *)
	masterState : MASTER_STATE;

	(* Адрес сервера *)
	byServerAddr : BYTE := 128;

	(* Период выполнения запросов *)
	requestPeriod : TIME := T#25ms;

	(* Текущее время *)
	currentTime : TIME;

	(* Время выполнения следующего запроса *)
	requestTime : TIME;

	(* Время ожидания ответа (первого байта ответа) сервера *)
	timeToWait : TIME := T#10ms;

	(* Таймаут межсимвольного интервала, для определения  *)
	intervalTimeout : TIME := T#5ms;                                   (* âîçìîæíî òîæå óìåíüøèòü â 4 ðàçà *)

	(* Ïðèçíàê ïðîâåäåííîé èíèöèàëèçàöèè *)
	fInitialized : BOOL := FALSE;

	(* Ìàññèâ ïîä ôîðìèðîâàíèå çàïðîñà/îòâåòà *)
	abyBuffer : ARRAY [0..255] OF BYTE;

	(* Êîä ôóíêöèè çàïðîñà *)
	byFunctionCode : BYTE := 1;

	(* Äëèíà äàííûõ *)
	wDataLen : WORD;

	(* Îffset *)
	wOffset : WORD;

	(* Êîíòðîëüíàÿ ñóììà *)
	wCrc16 :BYTE := 126; (* èíâåíðñèÿ ñóììû àäðåñ+êîä ôóíêöèè, 128+1 *)
	indx : INT;

	(* Ñ÷åò÷èê èíèöèèðîâàííûõ òðàíçàêöèé *)
	transactionCount : DWORD;

	(* Ñ÷åò÷èê òðàíçàêöèé çàâåðøåííûõ óñïåøíî *)
	transactionOkCount : DWORD;

	(* Ñ÷åò÷èê òðàíçàêöèé çàâåðøåííûõ îøèáêîé *)
	transactionErrorCount : DWORD;

	(* ñòàðò-áàéò ïî ðèâàñó, îí æå è ñòîï-áàéò *)
	start_byte : BYTE := 255;
	(* ìàññèâ ïîëó÷åííûõ äàííûõ î ïîëîæåíèè ÂÒ *)
	mydata : ARRAY [0..3] OF BYTE := 4(0);
	i : INT;
	my_crc : BYTE;
	zero_angle : LREAL;
	temp,angle,myAngle : LREAL;
	angle_data : WORD;
	angle_fail : BOOL;
	countData : INT :=0;
  countAngle : INT :=0;
END_VAR
